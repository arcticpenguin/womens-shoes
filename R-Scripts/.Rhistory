-imageURLs)
write.csv(output, "filename.csv",row.names=FALSE)
# Keep useful columns
# df <- data_shoes[,c("id", "brand", "imageURLs", "prices.amountMin", "prices.amountMax", "prices.currency", "prices.isSale")]
df <- data_shoes
# Lets just keep the most popular 100 brands because no one cares about unbranded shoes, I think?
# brands <- data.frame(sort(table(df$brand), decreasing = TRUE))
# brands <- brands[2:101,]
# df <- df[which(df$brand %in% brands$Var1),]
#Function to standardise the prices to USD, as there are several currencies
convertPrice <- function(currency, amount){
ifelse(currency=='AUD', amount * 0.75,
ifelse(currency=='CAD', amount * 0.73,
ifelse(currency=='EUR', amount * 1.1,
ifelse(currency=='GPB', amount * 1.3,
amount))))
}
#Convert price to numeric and USD
df$prices.amountMax <- as.numeric(as.character(df$prices.amountMax))
df$prices.amountMin <- as.numeric(as.character(df$prices.amountMin))
df$prices.amountMin <- convertPrice(df$prices.currency, df$prices.amountMin)
df$prices.amountMax <- convertPrice(df$prices.currency, df$prices.amountMax)
#Split image URLs so we can grab product images later
df$imageURLStr <- df$imageURLs
df$imageURLs <- as.character(df$imageURLs) %>% strsplit(",")
df.distinct <- df %>% distinct(id, .keep_all = TRUE) %>% select(-brand)
df.clean <- df %>%
group_by(id) %>%
dplyr::summarise(
count = n(),
brand = first(brand),
price.max = mean(prices.amountMax, na.rm=TRUE),
price.min = mean(prices.amountMin, na.rm=TRUE),
price.avg = round((price.max + price.min) / 2),
urls = as.character(imageURLs[1])
) %>%
inner_join(df.distinct, by="id") %>%
arrange(desc(price.avg)) %>%
filter(!is.nan(price.avg))
output <- df.clean %>%
select(
-urls,
-imageURLs)
write.csv(output, "filename.csv",row.names=FALSE)
df.clean$brand <- ifelse(df.clean$brand=='PUMA', 'Puma', as.character(df.clean$brand))
df.clean$brand <- ifelse(df.clean$brand=='Lauren Ralph Lauren', 'Ralph Lauren', as.character(df.clean$brand))
df.clean$brand <- ifelse(df.clean$brand=='MICHAEL Michael Kors', 'Michael Kors', as.character(df.clean$brand))
df.clean$brand <- ifelse(df.clean$brand %in% c('Pleaser Shoes', 'PleaserUSA'), 'Pleaser', as.character(df.clean$brand))
output <- df.clean %>%
select(
-urls,
-imageURLs)
write.csv(output, "filename.csv",row.names=FALSE)
write.csv(output, "filename.csv", na="", row.names=FALSE, sep=",")
df.clean %>%
ggplot(aes(x=price.avg)) + geom_histogram(alpha=0.5)
df.clean %>% select(dateAdded)
df.clean %>%
ggplot(aes(y=price.avg, x=dateAdded)) + geom_histogram(alpha=0.5)
df.clean %>%
ggplot(aes(y=price.avg, x=dateAdded)) + geom_point(alpha=0.5)
df.clean %>% select(dateAdded)
df.clean %>% select(dateAdded) %>% summary()
df.clean %>%
select(dateAdded) %>%
mutate(date=as.Date(dateAdded))
df.clean %>%
select(dateAdded) %>%
mutate(date=as.Date(dateAdded)) %>%
summary()
df.clean %>%
ggplot(aes(y=price.avg, x=date)) + geom_point(alpha=0.5)
df.clean %>%
mutate(date=as.Date(dateAdded)) %>%
ggplot(aes(y=price.avg, x=date)) + geom_point(alpha=0.5)
df.clean %>%
mutate(date=as.Date(dateAdded)) %>%
ggplot(aes(x=date)) + geom_histogram(alpha=0.5)
df.clean %>%
mutate(date=as.Date(prices.dateAdded)) %>%
ggplot(aes(x=date)) + geom_histogram(alpha=0.5)
library(imager)
library(wordcloud2)
library(tidyverse)
library(dplyr)
data <- data.frame(read.csv('../data/cleaned-womens-shoe-prices.csv'))
nrows(data)
nrow(data)
data %>% select(brand)
data %>%
select(brand) %>%
unique()
data %>%
select(brand) %>%
unique() %>%
n()
data %>%
select(brand) %>%
unique() %>%
n(.)
data %>%
select(brand) %>%
unique() %>%
n()
data %>%
select(brand) %>%
unique() %>%
n
data %>%
select(brand) %>%
unique() %>%
nrows
data %>%
select(brand) %>%
unique() %>%
nrow
df.wc <- data %>%
group_by(as.character(brand)) %>%
summarise(price = round(mean(price.avg, rm.na=true))) %>%
arrange(desc(price))
wordcloud2(df.wc[-1,])
df.wc <- data %>%
group_by(as.character(brand)) %>%
summarise(price = round(mean(price.avg, rm.na=true)))
df.wc <- data %>%
group_by(as.character(brand)) %>%
summarise(price = round(mean(price.avg, rm.na=true))) %>%
arrange(desc(price))
df.wc <- data %>%
group_by(brand) %>%
summarise(price = round(mean(price.avg, rm.na=true))) %>%
arrange(desc(price))
View(data)
nrow(data)
df.wc <- data %>%
group_by(brand) %>%
summarise(price = round(mean(price.avg, rm.na=true)))
View(df.wc)
df.wc <- data %>%
group_by(brand) %>%
summarise(price = round(mean(price.avg)))
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
summarise(price = round(mean(price.avg, rm.na=true)))
df.wc <- data %>%
select(brand, price.avg)
View(df.wc)
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
summarise(price = round(mean(price.avg, rm.na=true)))
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(as.factor(brand)) %>%
summarise(price = round(mean(price.avg, rm.na=true)))
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
dplyr::summarise(price = round(mean(price.avg, rm.na=true)))
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
dplyr::summarise(price = round(mean(price.avg, rm.na=true))) %>%
arrange(desc(price))
wordcloud2(df.wc[-1,])
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
# dplyr::summarise(price = round(mean(price.avg, rm.na=true))) %>%
dplyr::summarise(n = n()) %>%
arrange(desc(n))
wordcloud2(df.wc[-1,])
wordcloud2()
?wordcloud2
wordcloud2(df.wc)
wordcloud2(df.wc)
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
dplyr::summarise(price = round(mean(price.avg, rm.na=true))) %>%
arrange(desc(n))
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
dplyr::summarise(price = round(mean(price.avg, rm.na=true))) %>%
arrange(desc(price))
wordcloud2(df.wc)
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(20) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Expensive brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(20) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
coord_flip() +
labs(title="Expensive brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(20) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
labs(title="Expensive brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(30) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
labs(title="Expensive brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(50) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
labs(title="Expensive brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(40) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
labs(title="Expensive brands", x="Brand", y="Mean Price (USD)")
df.clean %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(desc(price)) %>%
top_n(-40) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Cheap brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(desc(price)) %>%
top_n(-40) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Cheap brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(desc(price)) %>%
top_n(-30) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Cheap brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(30) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
coord_flip() +
labs(title="Expensive brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(price) %>%
top_n(30)
ggplot(mapping = aes(x=brand, y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Cheap brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(price) %>%
top_n(30) %>%
ggplot(mapping = aes(x=brand, y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Cheap brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(price) %>%
top_n(30) %>%
ggplot(mapping = aes(x=brand, price), y=price)) +
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(price) %>%
top_n(30)
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(price) %>%
top_n(30) %>%
ggplot(mapping = aes(x=brand, price, y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Cheap brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(price) %>%
top_n(30) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Cheap brands", x="Brand", y="Mean Price (USD)")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 50) %>%
arrange(desc(price)) %>%
top_n(-30) %>%
ggplot(mapping = aes(x=reorder(brand, price), y=price)) +
geom_bar(stat = "identity", aes(fill=price)) +
theme_light() +
scale_colour_gradient() +
coord_flip() +
labs(title="Cheap brands", x="Brand", y="Mean Price (USD)")
?reorder
data %>%
ggplot(aes(x=price.avg)) + geom_histogram(alpha=0.5)
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(30)
data %>%
ggplot(aes(x=price.avg, y=brand)) +
geom_point(alpha=0.5)
data %>%
ggplot(aes(x=price.avg, y=reorder(brand, price.avg))) +
geom_point(alpha=0.5)
install.packages("plotly")
data %>%
ggplot(aes(x=price.avg, y=reorder(brand, price.avg))) +
geom_point(alpha=0.5) %>%
plotly
library(plotly)
data %>%
ggplot(aes(x=price.avg, y=reorder(brand, price.avg))) +
geom_point(alpha=0.5) %>%
plotly
data %>%
ggplot(aes(x=price.avg, y=reorder(brand, price.avg))) +
geom_point(alpha=0.5) %>%
plot_ly
data %>%
ggplot(aes(x=price.avg, y=reorder(brand, price.avg))) +
geom_point(alpha=0.5) %>%
plotly
data %>%
ggplot(aes(x=price.avg, y=reorder(brand, price.avg))) +
geom_point(alpha=0.5) %>%
ggplotly
?plot_ly
plot_ly(data, x = ~price.avg, color = ~brand, type = "scatter")
plot_ly(data, x = ~price.avg, y = ~brand, type = "scatter")
plot_ly(data, x = ~price.avg, type = "histogram")
plot_ly(data, x = ~price.avg, y = ~brand, type = "scatter")
data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(30)
data %>%
plot_ly(x = ~price.avg, y = ~brand, type = "scatter")
expensive_brands <- data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(30)
data %>%
filter(brand %in% expensive_brands$brand) %>%
plot_ly(x = ~price.avg, y = ~brand, type = "scatter")
data %>%
filter(brand %in% expensive_brands$brand) %>%
plot_ly(x = ~price.avg, y = ~brand, type = "scatter", alpha = 0.5)
expensive_brands <- data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(30)
View(expensive_brands)
data %>%
filter(brand %in% expensive_brands$brand) %>%
plot_ly(x = ~price.avg, y = ~brand, type = "scatter", alpha = 0.5)
data %>%
filter(brand %in% expensive_brands$brand)
data %>%
filter(brand %in% expensive_brands$brand) %>%
plot_ly(x = ~price.avg, y = ~brand, type = "scatter", alpha = 0.5)
data %>%
filter(brand %in% expensive_brands$brand) %>%
plot_ly(x = ~price.avg, y = ~as.factor(brand), type = "scatter", alpha = 0.5)
data %>%
filter(brand %in% expensive_brands$brand) %>%
plot_ly(x = ~price.avg, y = ~as.character(brand), type = "scatter", alpha = 0.5)
data %>%
plot_ly(x = ~price.avg, y = ~as.character(brand), type = "scatter", alpha = 0.5)
data %>%
plot_ly(x = ~price.avg, y = ~as.character(brand), type = "scatter", alpha = 0.5)
expensive_brands <- data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price > 100) %>%
arrange(desc(price)) %>%
top_n(30)
data %>%
filter(brand %in% expensive_brands$brand) %>%
plot_ly(x = ~price.avg, y = ~as.character(brand), type = "scatter", alpha = 0.5)
cheap_brands <- data %>%
group_by(brand) %>%
dplyr::summarise(price = mean(price.avg, rm.na=true)) %>%
filter(price < 100) %>%
arrange(desc(price)) %>%
top_n(-30)
data %>%
filter(brand %in% cheap_brands$brand) %>%
plot_ly(x = ~price.avg, y = ~as.character(brand), type = "scatter", alpha = 0.5)
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
dplyr::summarise(price = round(mean(price.avg, rm.na=true))) %>%
arrange(desc(price))
wordcloud2(df.wc)
library(imager)
library(wordcloud2)
library(tidyverse)
library(dplyr)
library(plotly)
data <- data.frame(read.csv('../data/cleaned-womens-shoe-prices.csv'))
df.wc <- data %>%
select(brand, price.avg) %>%
group_by(brand) %>%
dplyr::summarise(price = round(mean(price.avg, rm.na=true))) %>%
arrange(desc(price))
wordcloud2(df.wc)
plot_ly(data, x = ~price.avg, type = "histogram")
plot_ly(data, x = ~price.avg, type = "histogram")
plotly(data, x = ~price.avg, type = "histogram")
plot_ly(data, x = ~price.avg, type = "histogram")
knit_with_parameters('~/Documents/Projects/VISPlayground/womens-shoes/R-Scripts/Data-Story.rmd')
unlink('Data-Story_cache', recursive = TRUE)
data %>%
ggplot(aes(x=price.avg, y=as.character(brand))) + geom_point(alpha=0.5)
data %>%
filter(brand %in% expensive_brands$brand) %>%
ggplot(aes(x=price.avg, y=as.character(brand))) + geom_point(alpha=0.5)
data %>%
filter(brand %in% cheap_brands$brand) %>%
ggplot(aes(x=price.avg, y=as.character(brand))) + geom_point(alpha=0.5)
